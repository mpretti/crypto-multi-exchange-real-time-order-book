<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crypto Historical Data Collection Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Header -->
    <header class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center">
                    <i class="fas fa-database text-blue-600 text-2xl mr-3"></i>
                    <h1 class="text-2xl font-bold text-gray-900">Historical Data Collection Dashboard</h1>
                </div>
                <div class="flex items-center space-x-4">
                    <div class="flex items-center text-sm text-gray-500">
                        <div class="w-2 h-2 bg-green-400 rounded-full mr-2"></div>
                        <span>System Online</span>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- System Metrics -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-blue-500">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-file-alt text-blue-600 text-2xl"></i>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-500">Total Files</p>
                        <p class="text-2xl font-semibold text-gray-900" id="total-files"><%= stats.totalFiles.toLocaleString() %></p>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-green-500">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-hdd text-green-600 text-2xl"></i>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-500">Total Size</p>
                        <p class="text-2xl font-semibold text-gray-900" id="total-size"><%= stats.totalSizeFormatted %></p>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-yellow-500">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-cogs text-yellow-600 text-2xl"></i>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-500">Active Collections</p>
                        <p class="text-2xl font-semibold text-gray-900" id="active-collectors"><%= stats.activeCollectors %></p>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-purple-500">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-clock text-purple-600 text-2xl"></i>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-500">Uptime</p>
                        <p class="text-2xl font-semibold text-gray-900" id="uptime"><%= stats.uptimeFormatted %></p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Control Panel -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">
                <i class="fas fa-play-circle text-green-600 mr-2"></i>
                Collection Controls
            </h2>
            
            <div class="space-y-4">
                <div class="flex flex-wrap gap-2">
                    <button onclick="startCollection()" 
                            class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        <i class="fas fa-play mr-2"></i>Start All Collections
                    </button>
                    <button onclick="startCollection('binance')" 
                            class="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        <i class="fas fa-play mr-2"></i>Start Binance
                    </button>
                    <button onclick="startCollection('bybit')" 
                            class="bg-orange-600 hover:bg-orange-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        <i class="fas fa-play mr-2"></i>Start Bybit
                    </button>
                    <button onclick="runAnalysis()" 
                            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        <i class="fas fa-chart-line mr-2"></i>Run Analysis
                    </button>
                </div>
            </div>
        </div>

        <!-- Live Logs -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">
                <i class="fas fa-file-alt text-blue-600 mr-2"></i>
                Live Collection Logs
            </h2>
            <div id="live-logs" class="bg-gray-900 text-gray-100 p-4 rounded-lg h-64 overflow-y-auto font-mono text-sm">
                <div class="text-gray-400">Waiting for collection logs...</div>
            </div>
        </div>
    </div>

    <script>
        const socket = io();
        
        socket.on('stats_update', (stats) => {
            document.getElementById('total-files').textContent = stats.totalFiles.toLocaleString();
            document.getElementById('total-size').textContent = stats.totalSizeFormatted;
            document.getElementById('active-collectors').textContent = stats.activeCollectors;
            document.getElementById('uptime').textContent = stats.uptimeFormatted;
        });

        socket.on('collection_log', (data) => {
            const logsContainer = document.getElementById('live-logs');
            const logElement = document.createElement('div');
            logElement.className = 'mb-1';
            logElement.innerHTML = `<span class="text-gray-400">[${new Date(data.log.timestamp).toLocaleTimeString()}]</span> ${data.log.message}`;
            
            logsContainer.appendChild(logElement);
            logsContainer.scrollTop = logsContainer.scrollHeight;
        });

        async function startCollection(exchange = null) {
            try {
                const url = exchange ? `/api/start/${exchange}` : '/api/start';
                const response = await fetch(url, { method: 'POST' });
                const result = await response.json();
                
                if (result.success) {
                    showNotification(`Collection started${exchange ? ` for ${exchange}` : ''}`, 'success');
                }
            } catch (error) {
                showNotification('Error starting collection', 'error');
            }
        }

        async function runAnalysis() {
            try {
                showNotification('Starting data analysis...', 'info');
                const response = await fetch('/api/analyze');
                showNotification('Data analysis completed', 'success');
            } catch (error) {
                showNotification('Analysis failed', 'error');
            }
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
                type === 'success' ? 'bg-green-500' :
                type === 'error' ? 'bg-red-500' :
                'bg-blue-500'
            } text-white`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 5000);
        }
    </script>
</body>
</html>
